<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_0" xml:space="preserve">
    <value>Nothing</value>
  </data>
  <data name="_1" xml:space="preserve">
    <value>Peasant Cap</value>
  </data>
  <data name="_10" xml:space="preserve">
    <value>Flat Templar</value>
  </data>
  <data name="_11" xml:space="preserve">
    <value>Pointy Templar</value>
  </data>
  <data name="_12" xml:space="preserve">
    <value>Bascinet Raised Visor</value>
  </data>
  <data name="_13" xml:space="preserve">
    <value>Bascinet Visor</value>
  </data>
  <data name="_14" xml:space="preserve">
    <value>Close Helmet</value>
  </data>
  <data name="_15" xml:space="preserve">
    <value>Barbute Visor</value>
  </data>
  <data name="_16" xml:space="preserve">
    <value>Barbute Raised</value>
  </data>
  <data name="_17" xml:space="preserve">
    <value>Barbute</value>
  </data>
  <data name="_18" xml:space="preserve">
    <value>Bishops Mantle</value>
  </data>
  <data name="_19" xml:space="preserve">
    <value>Chain Coif</value>
  </data>
  <data name="_2" xml:space="preserve">
    <value>Hood</value>
  </data>
  <data name="_20" xml:space="preserve">
    <value>Padded Coif</value>
  </data>
  <data name="_21" xml:space="preserve">
    <value>Slitted Kettle</value>
  </data>
  <data name="_22" xml:space="preserve">
    <value>Peasant Hat</value>
  </data>
  <data name="_23" xml:space="preserve">
    <value>Klappvisier</value>
  </data>
  <data name="_24" xml:space="preserve">
    <value>Klappvisier Up</value>
  </data>
  <data name="_25" xml:space="preserve">
    <value>Unvisored Klappvisier</value>
  </data>
  <data name="_26" xml:space="preserve">
    <value>Italian Klappvisier</value>
  </data>
  <data name="_27" xml:space="preserve">
    <value>Klappvisier Italian Up</value>
  </data>
  <data name="_28" xml:space="preserve">
    <value>Norman Casque</value>
  </data>
  <data name="_29" xml:space="preserve">
    <value>Raised Gothic Armet</value>
  </data>
  <data name="_3" xml:space="preserve">
    <value>Spanish Kettle</value>
  </data>
  <data name="_30" xml:space="preserve">
    <value>Domed Armet</value>
  </data>
  <data name="_31" xml:space="preserve">
    <value>Domed Armet Raised</value>
  </data>
  <data name="_32" xml:space="preserve">
    <value>Point Armet</value>
  </data>
  <data name="_33" xml:space="preserve">
    <value>Point Armet Raised</value>
  </data>
  <data name="_34" xml:space="preserve">
    <value>Regular Armet</value>
  </data>
  <data name="_35" xml:space="preserve">
    <value>Regular Armet Raised</value>
  </data>
  <data name="_36" xml:space="preserve">
    <value>Wedge Armet</value>
  </data>
  <data name="_37" xml:space="preserve">
    <value>Wedge Armet Raised</value>
  </data>
  <data name="_38" xml:space="preserve">
    <value>Sallet Bevor</value>
  </data>
  <data name="_39" xml:space="preserve">
    <value>Painted Sallet Bevor</value>
  </data>
  <data name="_4" xml:space="preserve">
    <value>Kettle</value>
  </data>
  <data name="_40" xml:space="preserve">
    <value>Painted Sallet Raised Visor</value>
  </data>
  <data name="_41" xml:space="preserve">
    <value>Painted Sallet</value>
  </data>
  <data name="_42" xml:space="preserve">
    <value>Crown</value>
  </data>
  <data name="_43" xml:space="preserve">
    <value>Crown Visor</value>
  </data>
  <data name="_44" xml:space="preserve">
    <value>Greathelm</value>
  </data>
  <data name="_45" xml:space="preserve">
    <value>Greathelm Band</value>
  </data>
  <data name="_46" xml:space="preserve">
    <value>Greathelm Cloak</value>
  </data>
  <data name="_47" xml:space="preserve">
    <value>Painted Greathelm</value>
  </data>
  <data name="_48" xml:space="preserve">
    <value>Painted Greathelm Band</value>
  </data>
  <data name="_49" xml:space="preserve">
    <value>Painted Greathelm Cloak</value>
  </data>
  <data name="_5" xml:space="preserve">
    <value>Eisenhut</value>
  </data>
  <data name="_50" xml:space="preserve">
    <value>Hounskull</value>
  </data>
  <data name="_51" xml:space="preserve">
    <value>Hounskull Raised</value>
  </data>
  <data name="_52" xml:space="preserve">
    <value>Hounskull no visor</value>
  </data>
  <data name="_53" xml:space="preserve">
    <value>Maille Hood Lowered</value>
  </data>
  <data name="_54" xml:space="preserve">
    <value>Maille Hood Spiked Lowered</value>
  </data>
  <data name="_55" xml:space="preserve">
    <value>Archers Cap</value>
  </data>
  <data name="_56" xml:space="preserve">
    <value>Archers Cap Feather</value>
  </data>
  <data name="_57" xml:space="preserve">
    <value>German Kettle</value>
  </data>
  <data name="_58" xml:space="preserve">
    <value>German Kettle Raised</value>
  </data>
  <data name="_59" xml:space="preserve">
    <value>Chaperone Hat</value>
  </data>
  <data name="_6" xml:space="preserve">
    <value>Flat Top</value>
  </data>
  <data name="_60" xml:space="preserve">
    <value>Landsknecht Hat Feather</value>
  </data>
  <data name="_61" xml:space="preserve">
    <value>Landsknecht Hat</value>
  </data>
  <data name="_62" xml:space="preserve">
    <value>Burgonet Buffet</value>
  </data>
  <data name="_63" xml:space="preserve">
    <value>Burgonet No Buffet</value>
  </data>
  <data name="_64" xml:space="preserve">
    <value>Conic Facemask</value>
  </data>
  <data name="_65" xml:space="preserve">
    <value>Painted Facemask</value>
  </data>
  <data name="_66" xml:space="preserve">
    <value>Spangenhelm stripped</value>
  </data>
  <data name="_67" xml:space="preserve">
    <value>Spangenhelm</value>
  </data>
  <data name="_68" xml:space="preserve">
    <value>Norman Casque No Nasal Guard</value>
  </data>
  <data name="_69" xml:space="preserve">
    <value>Wanderers Hood</value>
  </data>
  <data name="_7" xml:space="preserve">
    <value>Sallet Raised Visor</value>
  </data>
  <data name="_70" xml:space="preserve">
    <value>Workers Hood</value>
  </data>
  <data name="_71" xml:space="preserve">
    <value>Painted Barbute Visor</value>
  </data>
  <data name="_72" xml:space="preserve">
    <value>Painted Barbute Raised</value>
  </data>
  <data name="_73" xml:space="preserve">
    <value>Armet Plume</value>
  </data>
  <data name="_8" xml:space="preserve">
    <value>Sallet</value>
  </data>
  <data name="_9" xml:space="preserve">
    <value>Viking Helmet</value>
  </data>
</root>